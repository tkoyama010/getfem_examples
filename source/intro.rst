
イントロダクション
==================

あなたが新しく有限要素法プログラムを実装しようとしているのならば、GetFEM++を使用することをおすすめします。
GetFEM++はC++で実装されたオブジェクト指向の有限要素法ライブラリです。
普段数値計算をされている方はFortranやPythonを使用されている方が多く、C++はあまり馴染みがないかもしれません。
しかし、GetFEM++はPythonのインターフェースを持ち、便利な関数がC++とPythonの両方で実装されています。
つまり、Pythonで書いたコードをそのままC++に書き換えることができるのです。
プログラミングはライブラリの関数を書けばほぼ終わりですので、使用する際に覚えなくてはいけない言語に関する知識はそれほど多くないです。
本書では、PythonとC++でGetFEM++の実例を解説することでGetFEM++で使用されるクラスやメソッドに(筆者も含め)親しんでいただくことを目的に書きました。
ソースコードを読むことは旅をすることと同じです、気軽に読み進めていただければ幸いです。

旅の仲間
^^^^^^^^

道具へこだわりはとても大切です。
それは、あなたのモチベーションと作業効率に大きな影響を与えるでしょう。
ソースコードを読む際には筆者は以下のツールを使用しています。

- vim : 史上最高のエディタ。emacs? なにそれたべれるの？
- gdb : GNUソフトウェア・システムで動く標準のデバッガ。単独では使いにくいですがエディタと連携すると便利です。
- ctags : ソース及びヘッダ内にある名前のインデックス（又はタグ）ファイルを生成するプログラム。読みたい関数にいく際に便利です。
- doxygen : ソースからドキュメントを作成するソフト。コードリーディングの旅の地図を作ってくれます。
- sphinx : Python製のドキュメント作成ソフト。pdfやhtmlなどさまざまな出力に対応します。GetFEMのドキュメントに使用されています。
- tmux : 仮想端末を作る。１つの端末で複数のターミナルを操作するときに便利。byobuはデザインが好きじゃないんです。

以上のツールはあくまで筆者が旅の仲間と思っているツール達です。
どのツールが合うかは人それぞれです。

旅の指針
^^^^^^^^

あなたが読もうとしているソースはそもそも適切なものでしょうか？
もしも、テストでNGが発生するソースだったら？
正しく動くと思って手にいれたソースが正しく動かなかったらとても驚きます。
しかしそれは、ソースを読む大きなきっかけになるはずです。

**驚きはいいこと**

筆者が最近経験した事例について紹介しましょう。
GetFEM++のテストをしていたとき、あるテストでエラーが発生しました。
それまで、Python2系で作業をしていたのですが、Python3系で検証する必要があり設定を変えた際に発生した事象でした。

TODO: 説明する

このように、テスト駆動でソースを眺めていくことは大きな学びがあります。
本書では ``tests`` フォルダ以下のソースから説明を始めたいと思います。

コンパイル
^^^^^^^^^^

GetFEM++のコンパイルは他のGNUツールと共通ですのでフリーソフトに詳しい方であれば問題なく実行できるかと思います。
詳しくは `ダウンロードとインストール <https://tkoyama010.github.io/getfem-docs-html-ja/download.html>`_ ページを参照してください。
今回はソースコードをデバッグしながら読んでいきますので以下の設定が必要になります。

.. code-block:: console

   $ export CFLAGS=-g
   $ export CXXFLAGS=-g
   $ ./configure --with-pic --with-optimization=-O0

